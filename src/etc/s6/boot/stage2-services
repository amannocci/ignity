#!/bin/execlineb -S0

if {
  if -t { eltest -d /run/ignity/services }
  if { s6-echo "[supervisor/service] Starting services" }
  if {
    elglob -0 g "/run/ignity/services/*"
    forx -o 0 -p d { ${g} }
    importas -ui d d
    backtick -n i { s6-basename "${d}" }
    importas -ui i i
    if { eltest -d /run/ignity/services/${i} }
    s6-hiercopy /run/ignity/services/${i} /run/ignity/services-state/${i}
  }
  if { s6-svscanctl -a /run/ignity/services-state }
  if {
    # This envs decide if CMD should wait until services are up
    multisubstitute {
      importas -D 0 -u IGNITY_CMD_WAIT_FOR_SERVICES IGNITY_CMD_WAIT_FOR_SERVICES
      importas -D 5000 -u IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME
    }

    if -t { if { eltest ${IGNITY_CMD_WAIT_FOR_SERVICES} -ne 0 } eltest $# -ne 0 }
    s6-maximumtime -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME}
    elglob -0 g "/run/ignity/services-state/*"
    forx -o 0 d { ${g} }
    importas -ui d d
    backtick -n i { s6-basename "${d}" }
    importas -ui i i
    ifelse { eltest -f /run/ignity/services-state/${i}/down } { exit 0 }
    ifelse { eltest -f /run/ignity/services-state/${i}/notification-fd }
    { s6-svwait -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME} -U /run/ignity/services-state/${i} }
    s6-svwait -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME} -u /run/ignity/services-state/${i}
  }
  if { s6-echo -- "[supervisor/service] Services started" }
}

$@
