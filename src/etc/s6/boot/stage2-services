#!/bin/execlineb -S0

if {
  if -t { s6-test -d /run/ignity/services }
  if { s6-echo "[ignity/service] Starting services" }
  if {
    pipeline { s6-ls -0 -- /run/ignity/services }
    forstdin -0 -p -- i
    importas -u i i
    if { s6-test -d /run/ignity/services/${i} }
    s6-hiercopy /run/ignity/services/${i} /run/ignity/services-state/${i}
  }
  if { s6-svscanctl -a /run/ignity/services-state }
  if {
    # This envs decide if CMD should wait until services are up
    multisubstitute {
      importas -D 0 -u IGNITY_CMD_WAIT_FOR_SERVICES IGNITY_CMD_WAIT_FOR_SERVICES
      importas -D 5000 -u IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME
    }

    if -t { if { s6-test ${IGNITY_CMD_WAIT_FOR_SERVICES} -ne 0 } s6-test $# -ne 0 }
    s6-maximumtime -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME}
    pipeline { s6-ls -0 -- /run/ignity/services-state }
    forstdin -0 -o 0 -- i
    importas -u i i
    ifelse { s6-test -f /run/ignity/services-state/${i}/down } { exit 0 }
    ifelse { s6-test -f /run/ignity/services-state/${i}/notification-fd }
    { s6-svwait -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME} -U /run/ignity/services-state/${i} }
    s6-svwait -t ${IGNITY_CMD_WAIT_FOR_SERVICES_MAXTIME} -u /run/ignity/services-state/${i}
  }
  if { s6-echo -- "[ignity/service] Services started" }
}

$@
